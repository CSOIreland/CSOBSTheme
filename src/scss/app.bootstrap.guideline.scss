// Use functional color palette for Branding maintenance
$primary: #006F74;
$secondary: #128091;
$tertiary: #35456B;
$navbar: #004F50;
$success: #019E79;
$info: #008099;
$warning: #EBA900;
$danger: #DC4128;
$light: #fff;
$dark: #343a40;
$neutral: #CDD3D9;
$default: #f8f9fa;
$primary-light: #579599;

// Functional Colors for flags
$official: #DC4128;
$exceptional: #EBA900;
$reservation: #DC4128;
$archive: #343a40;
$analytical: #EBA900;
$experimental: #EBA900;

// Do NOT use standard color palette for Branding maintenance
$blue:#008FAA;
$indigo:#6610f2;
$purple:#1D345C;
$pink:#B51E83;
$red:#DC4128;
$orange:#fd7e14;
$yellow:#FAA21B;
$green: #006168;
$teal:#45C1C0;
$cyan:#17a2b8;
$black:#000000;
$white:#ffffff;
$gray: #6c757d;
$gray-dark: #343a40;


//overrides
$navbar-text-hover-color: #cbd3da;
$navbar-light-hover-color:  $navbar-text-hover-color!important;
$navbar-light-active-color: $white;
$navbar-light-color: $white;
$navbar-light-disabled-color : $navbar-text-hover-color;

// import boostrap scss variables and functions, its important this is placed above any merge operations
@import '~bootstrap/scss/_functions';
@import '~bootstrap/scss/_variables';

$cso-custom-theme-colours: (
  'blue': $blue,
  'indigo':$indigo,
  'purple':$purple,
  'pink':$pink,
  'orange':$orange,
  'yellow':$yellow,
  'green':$green,
  'teal':$teal,
  'cyan':$cyan,
  'black':$black,
  'white':$white,
  'gray':$gray,
  'gray-dark':$gray-dark,
  'primary': $primary,
  'secondary': $secondary,
  'tertiary': $tertiary,
  'navbar': $navbar,
  'success': $success,
  'info': $info,
  'warning': $warning,
  'danger': $danger,
  'light': $light,
  'dark': $dark,
  'neutral': $neutral,
  'default': $default,
  'official': $official,
  'exceptional': $exceptional,
  'reservation': $reservation,
  'archive': $archive,
  'analytical': $analytical,
  'experimental': $experimental,
  'primary-light': $primary-light
);

//* merge the newly created custom theme with bootstraps default
$theme-colors: map-merge($cso-custom-theme-colours, $theme-colors);

$font-family-sans-serif:      'Roboto Sans', sans-serif;
$font-family-monospace:       SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !default;
$font-family-base:            $font-family-sans-serif !default;
$headings-font-family:        'Roboto Slab', sans-serif;

// Toggle global options
$enable-dark-mode : false;
$spacer: 1rem;	//1rem (default), or any value > 0	Specifies the default spacer value to programmatically generate our spacer utilities.
$enable-rounded: true;	//true (default) or false	Enables predefined border-radius styles on various components.
$enable-shadows: true;//	true or false (default)	Enables predefined decorative box-shadow styles on various components. Does not affect box-shadows used for focus states.
$enable-gradients  :true;//	true or false (default)	Enables predefined gradients via background-image styles on various components.
$enable-transitions : true;//	true (default) or false	Enables predefined transitions on various components.
$enable-reduced-motion :true;//	true (default) or false	Enables the prefers-reduced-motion media query, which suppresses certain animations/transitions based on the users’ browser/operating system preferences.
$enable-grid-classes : true;//	true (default) or false	Enables the generation of CSS classes for the grid system (e.g. .row, .col-md-1, etc.).
$enable-container-classes: true;//	true (default) or false	Enables the generation of CSS classes for layout containers. (New in v5.2.0)
$enable-caret : true;//	true (default) or false	Enables pseudo element caret on .dropdown-toggle.
$enable-button-pointers : false;//	true (default) or false	Add “hand” cursor to non-disabled button elements.
$enable-rfs: true;	//true (default) or false	Globally enables RFS.
$enable-validation-icons: true;//	true (default) or false	Enables background-image icons within textual inputs and some custom forms for validation states.
$enable-negative-margins : true;//	true or false (default)	Enables the generation of negative margin utilities.
$enable-deprecation-messages : true;//	true (default) or false	Set to false to hide warnings when using any of the deprecated mixins and functions that are planned to be removed in v6.
$enable-important-utilities: true;	//true (default) or false	Enables the !important suffix in utility classes.
$enable-smooth-scroll : true; //	true (default) or false	Applies scroll-behavior: smooth globally, except for users asking for reduced motion through prefers-reduced-motion media query


@import "~bootstrap/scss/bootstrap";


// Website font
@import url(https://fonts.googleapis.com/css?family=Roboto+Slab:400,300,300italic,400italic,700,700italic);


// Other custom styles

/*** cso button styling ***/

.btn-reservation, .btn-official, .btn-danger{
    --bs-btn-color:#fff;
    --bs-btn-hover-color:#fff;
    --bs-btn-active-color:#fff;
    --bs-btn-disabled-color:#fff;
}

.btn-outline-danger, .btn-outline-reservation, .btn-outline-official{
    --bs-btn-hover-color:#fff;
    --bs-btn-active-color:#fff;
}


/****
*
* CSO Custom card modified SCSS from original BS card
*
*/

.cso-card-header {
  padding-left:0.1rem;
  margin-bottom: 0; // Removes the default margin-bottom of <hN>
  color: var(--#{$prefix}-white);
  background-color: var(--#{$prefix}-white);
  border-bottom: 1px;
  padding-top: 1rem;
  font-size:$h4-font-size;
  font-weight:normal;
  &:first-child {
    @include border-radius(var(--#{$prefix}card-inner-border-radius) var(--#{$prefix}card-inner-border-radius) 0 0);
  }
}



.cso-card {
  border-radius: 3px;
  border:none;
  box-shadow: 0 1px 1px 0 rgb(60 64 67 / 8%), 0 1px 3px 1px rgb(60 64 67 / 16%);
  border-left: 5px solid var(--bs-warning);
  padding: 0px 0px;
  margin-bottom: 1px;
  // scss-docs-start card-css-vars
  --#{$prefix}card-spacer-y: #{$card-spacer-y};
  --#{$prefix}card-spacer-x: #{$card-spacer-x};
  --#{$prefix}card-title-spacer-y: #{$card-title-spacer-y};
  --#{$prefix}card-box-shadow: #{$card-box-shadow};
  --#{$prefix}card-cap-padding-y: #{$card-cap-padding-y};
  --#{$prefix}card-cap-padding-x: #{$card-cap-padding-x};
  --#{$prefix}card-cap-bg: #{$card-cap-bg};
  --#{$prefix}card-cap-color: #{$card-cap-color};
  --#{$prefix}card-height: #{$card-height};
  --#{$prefix}card-color: #{$card-color};
  --#{$prefix}card-bg: #{$card-bg};
  --#{$prefix}card-img-overlay-padding: #{$card-img-overlay-padding};
  --#{$prefix}card-group-margin: #{$card-group-margin};
  // scss-docs-end card-css-vars
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0; // See https://github.com/twbs/bootstrap/pull/22740#issuecomment-305868106
  height: var(--#{$prefix}card-height);
  word-wrap: break-word;
  background-color: var(--#{$prefix}card-bg);
  background-clip: border-box;
}

.cso-card-body {
  // Enable `flex-grow: 1` for decks and groups so that card blocks take up
  // as much space as possible, ensuring footers are aligned to the bottom.
  flex: 1 1 auto;
  padding: 0.1rem;
  color: var(--#{$prefix}card-color);
}